version: 2.1
orbs:
  node: circleci/node@2.1.0
jobs:
  build-and-test:
  build:
    environment:
      IMAGE_NAME: camillocommits/askcicd
    
    executor:
      name: node/default
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build docker container server
          command: docker build . -t camillocommits/askcicd/server
          working_directory: ./server
      - run:
          name: Build docker container db
          command: docker build . -t camillocommits/askcicd/db
          working_directory: ./db
      - run:
          name: Build docker container client
          command: docker build . -t camillocommits/askcicd/client
          working_directory: ./client
      
  acceptance_test_1:
    executor:
      name: node/default
    steps:
      - checkout
      - node/install-packages:
          app-dir: ./server
      - run:
          command: npm install
          working_directory: ./server
      - run:
          command: npm test
          working_directory: ./server
  
  acceptance_test_2:
    executor:
      name: node/default
    steps:
      - checkout
      - run:
          command: npm install
          working_directory: ./client
      - run:
          command: npm test
          working_directory: ./client
   
  publish-latest:
    environment:
      IMAGE_NAME: askcicd
    executor:
      name: node/default
    steps:
      - checkout
      - setup_remote_docker          
      - run:
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "camillocommits" --password-stdin
            docker push camillocommits/askcicd/client:latest
      - run:
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "camillocommits" --password-stdin
            docker push camillocommits/askcicd/db:latest
      - run:
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "camillocommits" --password-stdin
            docker push camillocommits/askcicd/server:latest
            
workflows:
    build-and-test:
      jobs:
        - build:
          filters:
            branches:
              only:
                - master
        - acceptance_test_1:
            filters:
              branches:
                only:
                 - master
            requires:
                - build
        - acceptance_test_2:
            filters:
              branches:
                only:
                 - master
            requires:
                - build
        - publish-latest:
            requires:
              - acceptance_test_1
              - acceptance_test_2
         
